# Spring Application Configuration
spring.application.name=ocr-module
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
server.port=3333
service.url=http://127.0.0.1:8761

# Database configuration
spring.datasource.url=jdbc:mysql://localhost:3306/shared_database
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Multipart file configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.file-size-threshold=2MB
spring.servlet.multipart.location=/tmp

# Supported image types for OCR processing
ocr.tesseract.image.types=png,jpg,jpeg,pdf

# Path to the Tesseract configuration files
ocr.tesseract.config.path=/usr/share/tesseract-ocr/4.00/tessdata

# Specify languages for Tesseract (English, Arabic, French)
ocr.tesseract.lang=eng+ara+fra

# Tesseract service configuration
tesseract.host=localhost
tesseract.port=9090

# Logging Configuration
logging.level.org.springframework=DEBUG
logging.level.com.netflix.discovery=DEBUG
logging.level.org.apache.kafka=DEBUG
logging.level.org.springframework.kafka=DEBUG

# Kafka Configuration
spring.kafka.consumer.group-id=ocr-group
spring.kafka.consumer.bootstrap-servers=kafka:9092
spring.kafka.bootstrap-servers=kafka:9092

# Flyway configuration
spring.flyway.enabled=true
spring.flyway.url=jdbc:mysql://localhost:3306/shared_database
spring.flyway.user=root
spring.flyway.password=root

# CORS Configuration
cors.allowed.origins=http://localhost:3000,http://localhost:9090

# External Services Configuration
python.api.baseurl=http://sign-service:5005
ocr.api.url=http://127.0.0.1:5006/ocr

# Fraud Detection API Configuration
fraud.api.url=http://127.0.0.1:5005/fraud-check

# Signature API Configuration
signature.api.url=http://127.0.0.1:5005

# Enable Reactive Mode
spring.main.web-application-type=reactive

# ? Keycloak Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8282/realms/spring-microservices-realm
spring.security.oauth2.client.registration.keycloak.client-id=ocr-module
spring.security.oauth2.client.registration.keycloak.client-secret=rigo
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8282/realms/spring-microservices-realm

# Actuator for Monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always