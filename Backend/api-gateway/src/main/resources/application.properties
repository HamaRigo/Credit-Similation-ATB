spring.application.name=api-gateway
server.port=8187

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Service Routes
spring.cloud.gateway.routes[0].id=compte-module
spring.cloud.gateway.routes[0].uri=lb://compte-module
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/compte/**
spring.cloud.gateway.routes[0].filters[0]=OAuth2Login
spring.cloud.gateway.routes[0].filters[1]=AuthorizeRequest=hasRole('ROLE_user')

spring.cloud.gateway.routes[1].id=client-module
spring.cloud.gateway.routes[1].uri=lb://client-module
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/client/**
spring.cloud.gateway.routes[1].filters[0]=OAuth2Login
spring.cloud.gateway.routes[1].filters[1]=AuthorizeRequest=hasRole('ROLE_admin')

spring.cloud.gateway.routes[2].id=credit-module
spring.cloud.gateway.routes[2].uri=lb://credit-module
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/credit/**
spring.cloud.gateway.routes[2].filters[0]=OAuth2Login
spring.cloud.gateway.routes[2].filters[1]=AuthorizeRequest=hasRole('ROLE_admin')

spring.cloud.gateway.routes[3].id=ocr-module
spring.cloud.gateway.routes[3].uri=lb://ocr-module
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/ocrs/**
spring.cloud.gateway.routes[3].filters[0]=OAuth2Login
spring.cloud.gateway.routes[3].filters[1]=AuthorizeRequest=hasRole('ROLE_user')

# Eureka Server Route
spring.cloud.gateway.routes[4].id=discovery-server
spring.cloud.gateway.routes[4].uri=http://localhost:8761
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**

# Default Route for `/`
spring.cloud.gateway.routes[5].id=default-home-route
spring.cloud.gateway.routes[5].uri=http://localhost:8187
spring.cloud.gateway.routes[5].predicates[0]=Path=/
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/, /index.html

# Fallback Route
spring.cloud.gateway.routes[6].id=fallback-route
spring.cloud.gateway.routes[6].uri=http://localhost:8187
spring.cloud.gateway.routes[6].predicates[0]=Path=/**
spring.cloud.gateway.routes[6].filters[0]=RewritePath=/.*,/error

# OAuth2 JWT Configuration (Keycloak)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8282/realms/spring-microservices-realm

# OAuth2 Client Configuration for Keycloak
spring.security.oauth2.client.registration.keycloak.client-id=api-gateway
spring.security.oauth2.client.registration.keycloak.client-secret=rigo
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8282/realms/spring-microservices-realm

# Tracing and Monitoring
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

# Logging
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.org.springframework=DEBUG
logging.level.org.springframework.security=DEBUG
spring.main.allow-bean-definition-overriding=true

management.endpoints.web.exposure.include=*
management.endpoint.info.enabled=true
