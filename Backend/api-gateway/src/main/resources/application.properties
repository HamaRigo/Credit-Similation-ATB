spring.application.name=api-gateway
server.port=8187

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Service Routes Configuration
spring.cloud.gateway.routes[0].id=compte-module
spring.cloud.gateway.routes[0].uri=lb://compte-module
spring.cloud.gateway.routes[0].predicates[0]=Path=/comptes/**
spring.cloud.gateway.routes[0].filters[0]=TokenRelay

spring.cloud.gateway.routes[1].id=client-module
spring.cloud.gateway.routes[1].uri=lb://client-module
spring.cloud.gateway.routes[1].predicates[0]=Path=/clients/**
spring.cloud.gateway.routes[1].filters[0]=TokenRelay

spring.cloud.gateway.routes[2].id=credit-module
spring.cloud.gateway.routes[2].uri=lb://credit-module
spring.cloud.gateway.routes[2].predicates[0]=Path=/credits/**
spring.cloud.gateway.routes[2].filters[0]=TokenRelay

spring.cloud.gateway.routes[3].id=ocr-module
spring.cloud.gateway.routes[3].uri=lb://ocr-module
spring.cloud.gateway.routes[3].predicates[0]=Path=/ocrs/**
spring.cloud.gateway.routes[3].filters[0]=TokenRelay

spring.cloud.gateway.routes[4].id=user-module
spring.cloud.gateway.routes[4].uri=lb://user-module
spring.cloud.gateway.routes[4].predicates[0]=Path=/users/**
spring.cloud.gateway.routes[4].filters[0]=TokenRelay

spring.cloud.gateway.routes[5].id=role-module
spring.cloud.gateway.routes[5].uri=lb://role-module
spring.cloud.gateway.routes[5].predicates[0]=Path=/roles/**
spring.cloud.gateway.routes[5].filters[0]=TokenRelay

spring.cloud.gateway.routes[6].id=discovery-server
spring.cloud.gateway.routes[6].uri=http://localhost:8761
spring.cloud.gateway.routes[6].predicates[0]=Path=/eureka/**

spring.cloud.gateway.routes[7].id=fallback-route
spring.cloud.gateway.routes[7].uri=forward:/error
spring.cloud.gateway.routes[7].predicates[0]=Path=/fallback/**

# OAuth2 Resource Server Configuration (JWT - Keycloak)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8282/realms/spring-microservices-realm

# OAuth2 Client Registration with Keycloak
spring.security.oauth2.client.registration.keycloak.client-id=api-gateway
spring.security.oauth2.client.registration.keycloak.client-secret=rigo
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8282/realms/spring-microservices-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# OAuth2 Login Redirect
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Zipkin Tracing and Monitoring
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

# Logging Configuration
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.org.springframework=DEBUG
logging.level.org.springframework.security=DEBUG

spring.main.allow-bean-definition-overriding=true

# Actuator endpoints exposure (for monitoring)
management.endpoints.web.exposure.include=*
management.endpoint.info.enabled=true

spring.main.web-application-type=reactive