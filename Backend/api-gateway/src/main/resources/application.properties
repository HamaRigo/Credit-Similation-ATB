# Application Name and Port
spring.application.name=api-gateway
server.port=8187

# Eureka Configuration
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# Keycloak OAuth2 Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8282/realms/spring-microservices-realm
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8282/realms/spring-microservices-realm
spring.security.oauth2.client.registration.keycloak.client-id=api-gateway
spring.security.oauth2.client.registration.keycloak.client-secret=rigo
spring.security.oauth2.client.registration.keycloak.scope=openid

# Gateway Routes with TokenRelay
spring.cloud.gateway.routes[0].id=compte-module
spring.cloud.gateway.routes[0].uri=lb://compte-module
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/compte/**
spring.cloud.gateway.routes[0].filters[0]=TokenRelay
#spring.cloud.gateway.routes[0].filters[1]=AuthorizeRequest=hasAuthority('SCOPE_ROLE_user')

spring.cloud.gateway.routes[1].id=client-module
spring.cloud.gateway.routes[1].uri=lb://client-module
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/client/**
spring.cloud.gateway.routes[1].filters[0]=TokenRelay
#spring.cloud.gateway.routes[1].filters[1]=AuthorizeRequest=hasAuthority('SCOPE_ROLE_admin')

spring.cloud.gateway.routes[2].id=credit-module
spring.cloud.gateway.routes[2].uri=lb://credit-module
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/credit/**
spring.cloud.gateway.routes[2].filters[0]=TokenRelay
#spring.cloud.gateway.routes[2].filters[1]=AuthorizeRequest=hasAuthority('SCOPE_ROLE_admin')

spring.cloud.gateway.routes[3].id=ocr-module
spring.cloud.gateway.routes[3].uri=lb://ocr-module
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/ocrs/**
spring.cloud.gateway.routes[3].filters[0]=TokenRelay
#spring.cloud.gateway.routes[3].filters[1]=AuthorizeRequest=hasAuthority('SCOPE_ROLE_user')

# Eureka Server Route
spring.cloud.gateway.routes[4].id=discovery-server
spring.cloud.gateway.routes[4].uri=http://localhost:8761
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**

# Default Route for `/`
spring.cloud.gateway.routes[5].id=default-home-route
spring.cloud.gateway.routes[5].uri=http://localhost:8187
spring.cloud.gateway.routes[5].predicates[0]=Path=/
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/, /index.html

spring.cloud.gateway.routes[6].id=user-module
spring.cloud.gateway.routes[6].uri=lb://user-module
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/user/**
spring.cloud.gateway.routes[6].filters[0]=TokenRelay
#spring.cloud.gateway.routes[2].filters[1]=AuthorizeRequest=hasAuthority('SCOPE_ROLE_admin')

# Fallback Route
spring.cloud.gateway.routes[7].id=fallback-route
spring.cloud.gateway.routes[7].uri=http://localhost:8187
spring.cloud.gateway.routes[7].predicates[0]=Path=/fallback/**
spring.cloud.gateway.routes[7].filters[0]=RewritePath=/.*,/error

# Logging
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.org.springframework=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# Management and Tracing
management.endpoints.web.exposure.include=health,info
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0
# Reactive and Discovery Settings
spring.main.web-application-type=reactive
spring.cloud.discovery.reactive.enabled=true
spring.cloud.discovery.blocking.enabled=false
logging.level.org.springframework.web=DEBUG